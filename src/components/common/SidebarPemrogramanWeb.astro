---
// src/components/common/SidebarPemrogramanWeb.astro

// Define props
export interface Props {
  logoUrl?: string;
  title?: string;
  subtitle?: string;
  menuItems?: Array<{
    title: string;
    dropdownId: string;
    items: Array<{
      title: string;
      href: string;
    }>;
  }>;
}

// Default props
const {
  logoUrl = "https://upload.wikimedia.org/wikipedia/commons/2/21/Logo-stmik-bina-mulia-palu.png",
  title = "Pemrograman",
  subtitle = "Web",
  menuItems = [
    {
      title: "Pemrograman Web 1",
      dropdownId: "pw1",
      items: [
        {
          title: "Pertemuan 1: Pengenalan Website",
          href: "/pemrograman-web/satu-pertemuan-1"
        },
        {
          title: "Pertemuan 2: Heading, Paragraph, dan Style",
          href: "/pemrograman-web/satu-pertemuan-2"
        },
        {
          title: "Pertemuan 3: Link dan Anchor",
          href: "/pemrograman-web/satu-pertemuan-3"
        },
        {
          title: "Pertemuan 4: Style - CSS",
          href: "/pemrograman-web/satu-pertemuan-4"
        },
        {
          title: "Pertemuan 5: Gambar",
          href: "/pemrograman-web/satu-pertemuan-5"
        },
        {
          title: "Pertemuan 6: Tabel",
          href: "/pemrograman-web/satu-pertemuan-6"
        },
        {
          title: "Pertemuan 7: Form dan Input Elements",
          href: "/pemrograman-web/satu-pertemuan-7"
        },
        {
          title: "Pertemuan 8: UTS - Project HTML Dasar",
          href: "/pemrograman-web/satu-pertemuan-8"
        },
        {
          title: "Pertemuan 9: Pengenalan CSS & Selector Dasar",
          href: "/pemrograman-web/satu-pertemuan-9"
        },
        {
          title: "Pertemuan 10: Color, Background, dan Font",
          href: "/pemrograman-web/satu-pertemuan-10"
        },
        {
          title: "Pertemuan 11: Box Model (Margin, Border, Padding)",
          href: "/pemrograman-web/satu-pertemuan-11"
        },
        {
          title: "Pertemuan 12: Layout dengan Float",
          href: "/pemrograman-web/satu-pertemuan-12"
        },
        {
          title: "Pertemuan 13: Position (Static, Relative, Absolute, Fixed)",
          href: "/pemrograman-web/satu-pertemuan-13"
        },
        {
          title: "Pertemuan 14: Flexbox Dasar",
          href: "/pemrograman-web/satu-pertemuan-14"
        },
        {
          title: "Pertemuan 15: Responsive Design & Media Query",
          href: "/pemrograman-web/satu-pertemuan-15"
        },
        {
          title: "Pertemuan 16: UAS - Project Website Sederhana",
          href: "/pemrograman-web/satu-pertemuan-16"
        }
      ]
    }
  ]
} = Astro.props;
---

<aside class="w-64 bg-white border-r border-gray-200 h-screen overflow-y-auto">
  <div class="px-6 py-4">
    <!-- Logo -->
    <div class="flex items-center space-x-3">
      <img src={logoUrl} alt="Logo STMIK Bina Mulia Palu" class="h-8 w-8" />
      <div>
        <h2 class="text-xl font-semibold text-gray-800">{title}</h2>
        <p class="text-gray-700">{subtitle}</p>
      </div>
    </div>
  </div>

  <nav class="mt-6 px-4">
    <!-- Divider -->
    <div class="my-6 border-t border-gray-200"></div>

    <!-- Menu Items -->
    {menuItems.map((menuItem) => (
      <div class="mb-4">
        <button 
          id={`dropdown-${menuItem.dropdownId}`}
          class="flex justify-between items-center w-full px-4 py-2 text-xs font-semibold text-gray-500 uppercase tracking-wider hover:bg-gray-50 rounded transition-colors"
          onclick={`toggleDropdown('${menuItem.dropdownId}')`}
        >
          <span>{menuItem.title}</span>
          <svg id={`icon-${menuItem.dropdownId}`} class="w-4 h-4 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
          </svg>
        </button>
        <div id={`content-${menuItem.dropdownId}`} class="mt-2 space-y-1">
          {menuItem.items.map((item) => (
            <a
              href={item.href}
              class="block px-4 py-2 text-sm text-gray-600 rounded hover:bg-gray-100 transition-colors"
            >
              {item.title}
            </a>
          ))}
        </div>
      </div>
    ))}
  </nav>
</aside>

<style>
  /* Tambahkan animasi smooth untuk dropdown */
  [id^="content-"] {
    transition: all 0.3s ease-in-out;
  }
  
  /* Tambahkan style untuk rotasi ikon */
  .rotate-180 {
    transform: rotate(180deg);
  }
</style>

<script>
  // Function untuk toggle dropdown
  function toggleDropdown(dropdownId) {
    const content = document.getElementById(`content-${dropdownId}`);
    const icon = document.getElementById(`icon-${dropdownId}`);
    
    // Toggle display content
    if (content.style.display === 'none' || content.style.display === '') {
      content.style.display = 'block';
      icon.classList.add('rotate-180');
    } else {
      content.style.display = 'none';
      icon.classList.remove('rotate-180');
    }
  }

  // Initialize dropdown states on page load
  document.addEventListener('DOMContentLoaded', function() {
    // Sembunyikan semua dropdown content secara default
    {menuItems.map((menuItem) => (
      `const content${menuItem.dropdownId} = document.getElementById('content-${menuItem.dropdownId}');
      if (content${menuItem.dropdownId}) {
        content${menuItem.dropdownId}.style.display = 'none';
      }`
    )).join('')}
  });
</script>